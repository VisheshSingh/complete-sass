@use 'sass:math';

$grid-columns: 12;
$grid-gaps: (
  '0': 0,
  '1': 10px,
  '2': 20px,
  '3': 30px,
);
$layout-styles: flex-start, flex-end, center, space-between, space-around,
  space-evenly;

// container
.container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 20px;
  box-sizing: border-box;
}

.row {
  display: flex;
  flex-flow: row wrap;
}

// grid gaps
@each $k, $v in $grid-gaps {
  .gap-#{$k} > * {
    padding: $v;
  }

  .gap-#{$k} {
    margin-left: -$v;
    margin-right: -$v;
  }
}

@each $val in $layout-styles {
  .justify-#{$val} {
    justify-content: $val;
  }
}

@include xs {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xs {
      width: math.div($i * 100%, $grid-columns);
      box-sizing: border-box;
      flex-grow: 0;
    }
  }
}

@include sm {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-sm {
      width: math.div($i * 100%, $grid-columns);
      box-sizing: border-box;
      flex-grow: 0;
    }
  }
}

@include md {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-md {
      width: math.div($i * 100%, $grid-columns);
      box-sizing: border-box;
      flex-grow: 0;
    }
  }
}

@include lg {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-lg {
      width: math.div($i * 100%, $grid-columns);
      box-sizing: border-box;
      flex-grow: 0;
    }
  }
}

@include xl {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xl {
      width: math.div($i * 100%, $grid-columns);
      box-sizing: border-box;
      flex-grow: 0;
    }
  }
}
